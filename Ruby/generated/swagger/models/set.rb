# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module scryfall
  module Models
    #
    # Model object.
    #
    #
    class Set
      # @return [String]
      attr_accessor :code

      # @return [String]
      attr_accessor :mtgo_code

      # @return [String]
      attr_accessor :name

      # @return [SetTypes] Possible values include: 'core', 'expansion',
      # 'masters', 'masterpiece', 'from_the_vault', 'spellbook',
      # 'premium_deck', 'duel_deck', 'commander', 'planechase', 'conspiracy',
      # 'archenemy', 'vanguard', 'funny', 'starter', 'box', 'promo', 'token',
      # 'memorabilia', 'treasure_chest'
      attr_accessor :set_type

      # @return [Date]
      attr_accessor :released_at

      # @return [String]
      attr_accessor :block_code

      # @return [String]
      attr_accessor :block

      # @return [String]
      attr_accessor :parent_set_code

      # @return [Integer]
      attr_accessor :card_count

      # @return [Boolean]
      attr_accessor :digital

      # @return [Boolean]
      attr_accessor :foil

      # @return [String]
      attr_accessor :icon_svg_uri

      # @return [String]
      attr_accessor :search_uri


      #
      # Mapper for Set class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'set',
          type: {
            name: 'Composite',
            class_name: 'Set',
            model_properties: {
              code: {
                client_side_validation: true,
                required: false,
                serialized_name: 'code',
                type: {
                  name: 'String'
                }
              },
              mtgo_code: {
                client_side_validation: true,
                required: false,
                serialized_name: 'mtgo_code',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              set_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'set_type',
                type: {
                  name: 'Enum',
                  module: 'SetTypes'
                }
              },
              released_at: {
                client_side_validation: true,
                required: false,
                serialized_name: 'released_at',
                type: {
                  name: 'Date'
                }
              },
              block_code: {
                client_side_validation: true,
                required: false,
                serialized_name: 'block_code',
                type: {
                  name: 'String'
                }
              },
              block: {
                client_side_validation: true,
                required: false,
                serialized_name: 'block',
                type: {
                  name: 'String'
                }
              },
              parent_set_code: {
                client_side_validation: true,
                required: false,
                serialized_name: 'parent_set_code',
                type: {
                  name: 'String'
                }
              },
              card_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'card_count',
                type: {
                  name: 'Number'
                }
              },
              digital: {
                client_side_validation: true,
                required: false,
                serialized_name: 'digital',
                type: {
                  name: 'Boolean'
                }
              },
              foil: {
                client_side_validation: true,
                required: false,
                serialized_name: 'foil',
                type: {
                  name: 'Boolean'
                }
              },
              icon_svg_uri: {
                client_side_validation: true,
                required: false,
                serialized_name: 'icon_svg_uri',
                type: {
                  name: 'String'
                }
              },
              search_uri: {
                client_side_validation: true,
                required: false,
                serialized_name: 'search_uri',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
